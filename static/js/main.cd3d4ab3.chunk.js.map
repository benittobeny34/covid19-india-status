{"version":3,"sources":["components/Navbar.js","components/Home.js","components/FilteredDay.js","components/FilteredState.js","components/SearchBox.js","components/StateTally.js","components/StateList.js","components/Day.js","components/DayList.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","id","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Component","Home","FilteredDay","day","matchedDay","days","map","d","check","date","dt","Date","toString","substring","key","dailyconfirmed","dailydeceased","dailyrecovered","totalconfirmed","totaldeceased","totalrecovered","FilteredState","state","matchedState","statelist","eachState","statecode","active","confirmed","deaths","recovered","statenotes","lastupdatedtime","SearchBox","region","e","this","setState","target","value","input","props","format","maxDate","minDate","placeholder","onChange","defaultValue","handleChange","StateTally","stats","StateList","states","axios","get","then","res","data","slice","index","Day","DayList","particularDate","reverse","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cd3d4ab3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Navbar extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n     <nav className=\"navbar navbar-expand-lg navbar-light bg-light\" id=\"navbar\">\r\n  <a className=\"navbar-brand\" href=\"/home\">Benitto</a>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul className=\"navbar-nav mr-auto\">\r\n      <li className=\"nav-item active\">\r\n        <a className=\"nav-link\" href=\"/\">State-wise <span className=\"sr-only\">(current)</span></a>\r\n      </li>\r\n       <li className=\"nav-item active\">\r\n        <a className=\"nav-link\" href=\"/daywise\">Day-wise <span className=\"sr-only\">(current)</span></a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n","import React  from 'react';\r\n\r\nconst Home = () => {\r\n    return (\r\n       <div>\r\n          Hi,My gorgeous friends here you can get the covid 19 tally\r\n          by Daywise and StateWise for india . just click the above three lines and choose\r\n          appropriate one and  enter the date or select\r\n          the state you want to know the covid count.\r\n\r\n       </div>  \r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst FilteredDay = ({ day,days }) => {\r\n\tlet matchedDay = days.map(d => {\r\n\t\tlet check = d.date;\r\n\t\tlet daymatch  = new Date(day);\r\n\t\tlet dt = daymatch.toString();\r\n\t\tlet dd = dt.substring(8,10);\r\n\t\tlet mm = dt.substring(4,7);\r\n\r\n\t\tif((dd+\" \"+mm)===check.substring(0,6)){\r\n\t\t\treturn <div className=\"describe\" key={d.date}>\r\n         <h2>Date:{d.date}</h2>\r\n         <p>Daily confirmed:{d.dailyconfirmed}</p>\r\n         <p>Daily deceased:{d.dailydeceased}</p>\r\n         <p>Daily recovered:{d.dailyrecovered}</p>\r\n         <p>Total confirmed:{d.totalconfirmed}</p>\r\n         <p>Total deceased:{d.totaldeceased}</p>\r\n         <p>Total recovered:{d.totalrecovered}</p>\r\n        \t\r\n      </div>  \r\n\t\t}\r\n\r\n\treturn null;\r\n        \r\n\t})\r\n    return (\r\n\r\n      <div >\r\n        {matchedDay}\r\n       <hr></hr>\r\n      </div>  \r\n    );\r\n};\r\n\r\n\r\n\r\nexport default FilteredDay;\r\n","import React from 'react';\r\n\r\nconst FilteredState = ({ state,statelist }) => {\r\n\r\n    let matchedState = statelist.map(eachState => {\r\n      if(eachState.statecode === state){\r\n        return (\r\n          <div className=\"describe\" key={eachState.statecode}>\r\n           <h2>{eachState.state}</h2>\r\n           <p>Active:{eachState.active}</p>\r\n           <p>Confirmed:{eachState.confirmed}</p>\r\n           <p>Deaths:{eachState.deaths}</p>\r\n           <p>Recovered:{eachState.recovered}</p>\r\n           <p>notes:{eachState.statenotes?eachState.statenotes:\"none\"}</p>\r\n           <p>lastupdated:{eachState.lastupdatedtime.substring(0,20)}</p>    \r\n        </div>\r\n          );\r\n      }\r\n     return null;\r\n    })\r\n    \r\n    return (\r\n\r\n      <div>\r\n        {matchedState}\r\n        <hr></hr>\r\n      </div>  \r\n    );\r\n};\r\n\r\n\r\n\r\nexport default FilteredState;\r\n","import React, { Component } from 'react';\r\nimport ModernDatePicker from 'react-modern-datepicker';\r\nimport FilteredDay from './FilteredDay';\r\nimport FilteredState from './FilteredState';\r\nclass SearchBox extends Component {\r\n\r\n\tstate  = {\r\n\t\tdate:null,\r\n\t\tregion:\"TT\",\r\n\t}\r\n\r\n\r\n\r\n   handleChange(e){\r\n      this.setState({region:e.target.value})\r\n  }\r\n    render() {\r\n    \tlet input = this.props.value === 'day' ? (<div><ModernDatePicker\r\n\t         date={this.state.date}\r\n\t      format={'MM-DD-YYYY'}\r\n\t      maxDate={new Date()}\r\n\t      minDate={\"01-31-2020\"}\r\n\t      id=\"search\"\r\n\t      placeholder={'pick a date to see count '}\r\n\t      onChange={date => {this.setState({\r\n \t\t  date:date,\r\n \t      })}}\r\n      />\r\n      <FilteredDay day={this.state.date} days={this.props.days}/>\r\n\r\n      </div>) :(\r\n         <div>\r\n        <select className=\"search\" defaultValue={this.state.region} onChange = {(e) => this.handleChange(e)}>\r\n         <option value=\"TT\">Total</option>\r\n         <option value=\"MH\">Maharashtra</option>\r\n         <option value=\"TN\">Tamil Nadu</option>\r\n         <option value=\"AP\">Andhra Pradesh</option>\r\n         <option value=\"KA\">Karnataka</option>\r\n         <option value=\"DL\">Delhi</option>\r\n         <option value=\"UP\">Uttar Pradesh</option>\r\n         <option value=\"WB\">West Bengal</option>\r\n         <option value=\"BR\">Bihar</option>\r\n         <option value=\"TG\">Telangana</option>\r\n         <option value=\"GJ\">Gujarat</option>\r\n         <option value=\"AS\">Assam</option>\r\n         <option value=\"RJ\">Rajasthan</option>\r\n         <option value=\"OR\">Odisha</option>\r\n         <option value=\"HR\">Haryana</option>\r\n         <option value=\"MP\">Madhya Pradesh</option>\r\n         <option value=\"KL\">Kerala</option>\r\n         <option value=\"PB\">Punjab</option>\r\n         <option value=\"JK\">Jammu and Kashmir</option>\r\n         <option value=\"JH\">Jharkhand</option>\r\n         <option value=\"CT\">Chhattisgarh</option>\r\n         <option value=\"UT\">Uttarakhand</option>\r\n         <option value=\"GA\">Goa</option>\r\n         <option value=\"TR\">Tripura</option>\r\n         <option value=\"PY\">Puducherry</option>\r\n         <option value=\"MN\">Manipur</option>\r\n         <option value=\"HP\">Himachal Pradesh</option>\r\n         <option value=\"NL\">Nagaland</option>\r\n         <option value=\"AR\">Arunachal Pradesh</option>\r\n         <option value=\"AN\">Andaman and Nicobar Islands</option>\r\n         <option value=\"LA\">Ladakh</option>\r\n         <option value=\"CH\">Chandigarh</option>\r\n         <option value=\"DN\">Dadra and Nagar Haveli and Daman and Diu</option>\r\n         <option value=\"ML\">Meghalaya</option>\r\n         <option value=\"SK\">Sikkim</option>\r\n         <option value=\"MZ\">Mizoram</option>\r\n         <option value=\"LD\">Lakshadweep</option>\r\n         <option value=\"UN\">State Unassigned</option>\r\n        </select>\r\n        <FilteredState state={this.state.region} statelist={this.props.statelist}/>\r\n        </div>\r\n      ); \r\n        return (\r\n            <div className=\"container\">\r\n            {input}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBox;\r\n\r\n","import React from 'react';\r\n\r\nimport '../App.css';\r\n\r\nconst StateTally = ({stats }) => {\r\n    return (\r\n        <div className=\"describe\">\r\n           <h2>{stats.state}</h2>\r\n           <p>Active:{stats.active}</p>\r\n           <p>Confirmed:{stats.confirmed}</p>\r\n           <p>Deaths:{stats.deaths}</p>\r\n           <p>Recovered:{stats.recovered}</p>\r\n           <p>lastupdated:{stats.lastupdatedtime.substring(0,10)}</p>\r\n           \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StateTally;\r\n","import React, {Component } from 'react';\r\nimport SearchBox from './SearchBox';\r\nimport axios from 'axios';\r\nimport StateTally from './StateTally'\r\nimport '../App.css';\r\n\r\nclass StateList extends Component {\r\n\tstate = {\r\n\t\tstates:[]\r\n\t}\r\n    componentDidMount() {\r\n        axios.get('https://api.covid19india.org/data.json').then(res => {\r\n            let data = res.data['statewise'];\r\n            this.setState({states:data});\r\n        })\r\n    }\r\n    render() {\r\n        return ( \r\n        \t<div className=\"statelist\"> \r\n        \t <SearchBox value = \"state\" statelist = {this.state.states} />\r\n             <h2>State Wise Tally</h2> \r\n             <div className='state'>\r\n        \t {this.state.states.slice(1).map((state,index) => {\r\n        \t \treturn <StateTally stats={state} key={index} />\r\n        \t })}\r\n             </div>\r\n        \t</div>);\r\n    }\r\n}\r\nexport default StateList;","import React from 'react';\r\n\r\nconst Day = ({ stats }) => {\r\n    return (\r\n        <div className=\"describe\">\r\n         <h2>{stats.date}</h2>\r\n         <p>Daily confirmed:{stats.dailyconfirmed}</p>\r\n         <p>Daily deceased:{stats.dailydeceased}</p>\r\n         <p>Daily recovered:{stats.dailyrecovered}</p>\r\n         <p>Total confirmed:{stats.totalconfirmed}</p>\r\n         <p>Total deceased:{stats.totaldeceased}</p>\r\n         <p>Total recovered:{stats.totalrecovered}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Day;\r\n","import React,{Component} from 'react';\r\nimport SearchBox from './SearchBox';\r\nimport Day from './Day';\r\nimport axios from 'axios';\r\nclass DayList extends Component {\r\n\tstate = {\r\n\t\tdays:[],\r\n\t\tparticularDate:null,\r\n\t}\r\n\t \r\n    componentDidMount() {\r\n        axios.get('https://api.covid19india.org/data.json').then(res => {\r\n            let data = res.data['cases_time_series'];\r\n            this.setState({days:data});\r\n        });\r\n    }\r\n  \r\n    render() {\r\n        return ( < div className=\"statelist\" >\r\n       < SearchBox value = \"day\" days={this.state.days}/>\r\n       <h2>Day Wise Tally</h2>\r\n       <div className='state'>\r\n         {this.state.days.reverse().map((day,index)=>{\r\n         \treturn <Day stats={day} key={index} />\r\n         })}\r\n         </div>\r\n          </div> );\r\n    }\r\n}\r\nexport default DayList;","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport {BrowserRouter,Route} from 'react-router-dom';\nimport Home from './components/Home';\nimport StateList from './components/StateList';\nimport DayList from './components/DayList';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Navbar/>\n         <h2>Covid 19 Status india</h2>\n         <BrowserRouter>\n         <Route exact path=\"/\" component={StateList}></Route>\n         <Route path=\"/daywise\" component={DayList}></Route>\n         <Route  path=\"/home\" component={Home}></Route>\n         </BrowserRouter>\n       <div className=\"top\">\n         <a href=\"#navbar\"><button type=\"button\" className=\"btn btn-outline-warning\">&#8593;</button></a>\n       </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}